generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Contrato {
  id            Int      @id @default(autoincrement())
  numero        String
  nome          String
  cliente       String
  dataInicio    DateTime
  dataFim       DateTime
  centroDeCusto String   // Nova coluna adicionada
  status        String   // Nova coluna adicionada
  createdAt     DateTime @default(now())
}

model Funcionario {
  id            Int       @id @default(autoincrement())
  matricula     String    @unique
  cpf           String?
  nome          String
  funcao        String?
  rg            String?
  orgaoEmissor  String?
  uf            String?
  dataNascimento DateTime?
  email         String?
  telefone      String?
  centroCusto   String?
  departamento  String?
  status        String?
  criadoEm      DateTime  @default(now())
  atualizadoEm  DateTime  @updatedAt
  excluidoEm    DateTime?
  pendencias    Pendencia[]
}

model Pendencia {
  id              Int       @id @default(autoincrement())
  funcionarioId   Int
  funcionario     Funcionario @relation(fields: [funcionarioId], references: [id])
  tipo            String
  descricao       String?
  equipe          String
  status          String    @default("Pendente")
  prioridade      String    @default("MÃ©dia")
  dataCriacao     DateTime  @default(now())
  dataAtualizacao DateTime  @updatedAt
  dataLimite      DateTime?
  dataConclusao   DateTime?
  criadoPor       String
  atualizadoPor   String
  observacoes     ObservacaoPendencia[]
}

model ObservacaoPendencia {
  id            Int       @id @default(autoincrement())
  pendenciaId   Int
  pendencia     Pendencia @relation(fields: [pendenciaId], references: [id], onDelete: Cascade)
  texto         String
  dataCriacao   DateTime  @default(now())
  dataModificacao DateTime @updatedAt
  criadoPor     String
  modificadoPor String
}

